*********************************************************************
*
* Mute sound
*
mute_sound:
       li   r0,mute_table              ; Mute all
       li   r2,4
mute_sound_1:
       movb *r0+,@sound
       dec  r2
       jne  mute_sound_1
       clr  @snd_channel_1
       clr  @snd_channel_2
       clr  @snd_channel_3
       clr  @snd_channel_4
*      Return
       rt
mute_table:
       byte >9f, >bf, >df, >ff
*// mute_sound

*********************************************************************
*
* Play zap
*
play_zap:
       .proc
       li   r0,snd_zap
       li   r1,snd_channel_1
       li   r2,>0020
       bl   @play_snd
       .endproc
*// play_zap

*********************************************************************
*
* Play bing
*
play_bing:
       .proc
       li   r0,snd_bing
       li   r1,snd_channel_1
       li   r2,A5
       bl   @play_snd
       .endproc
*// play_bing

*********************************************************************
*
* Play duouoh
*
play_duouoh:
       .proc
       li   r0,snd_duouoh
       li   r1,snd_channel_1
       li   r2,C4
       bl   @play_snd
       .endproc
*// play_duouoh

*********************************************************************
*
* Play ouip
*
play_ouip:
       .proc
       li   r0,snd_ouip
       li   r1,snd_channel_1
       li   r2,A2
       bl   @play_snd
       .endproc
*// play_ouip

*********************************************************************
*
* Play toc
*
play_toc:
       .proc
       li   r0,snd_toc
       li   r1,snd_channel_4
       bl   @play_snd
       .endproc
*// play_toc

*********************************************************************
*
* Play crash
*
play_crash:
       .proc
       li   r0,snd_crash
       li   r1,snd_channel_4
       bl   @play_snd
       .endproc
*// play_crash
